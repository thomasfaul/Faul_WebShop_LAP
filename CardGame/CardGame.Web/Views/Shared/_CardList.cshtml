
@using CardGame.Web.Models

@model IEnumerable<Card>
@{
    ViewBag.Title = "_CardList";
}

<nav class="navbar  navbar-fixed-top navbar-nav" id="topbarfilter">
    <div class="container-fluid">
        <div class="navbar-header">
            <a class="navbar-brand" style="color:darkorange">Filter die Karten nach:</a>
        </div>
        <ul class="nav navbar-nav">
            <li>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" style="min-width:5em;background-color:transparent;padding-top:1.4em;font-family:Xena">
                        Namen &nbsp;<span class="caret" style="border-color:white; border-width:2px"></span>
                    </button>
                    <ul class="dropdown-menu" style="background-color:transparent">
                        <li style="background-color:transparent">@Html.ActionLink("Aufsteigend", "CardCollection", new { SortValue = 1 }, new { @class = "btn dropdown-toggle" })</li>
                        <li style="background-color:transparent">@Html.ActionLink("Absteigend", "CardCollection", new { SortValue = 2 }, new { @class = "btn dropdown-toggle" })</li>
                    </ul>
                </div>
            </li>
            <li>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" style="min-width:5em;background-color:transparent;padding-top:1.4em;font-family:Xena">
                        Typ &nbsp;<span class="caret" style="border-color:white; border-width:2px"></span>
                    </button>
                    <ul class="dropdown-menu" style="background-color:transparent;">
                        <li style="background-color:transparent">@Html.ActionLink("Aufsteigend", "CardCollection", new { SortValue = 5 }, new { @class = "btn dropdown-toggle" })</li>
                        <li style="background-color:transparent">@Html.ActionLink("Absteigend", "CardCollection", new { SortValue = 6 }, new { @class = "btn dropdown-toggle" })</li>
                        <li style="background-color:transparent">@Html.ActionLink("Hero", "CardCollection", new { SortValue = 7 }, new { @class = "btn dropdown-toggle" })</li>
                        <li style="background-color:transparent">@Html.ActionLink("Minion", "CardCollection", new { SortValue = 8 }, new { @class = "btn dropdown-toggle" })</li>
                        <li style="background-color:transparent">@Html.ActionLink("Spell", "CardCollection", new { SortValue = 9 }, new { @class = "btn dropdown-toggle" })</li>
                        <li style="background-color:transparent">@Html.ActionLink("Weapon", "CardCollection", new { SortValue = 10 }, new { @class = "btn dropdown-toggle" })</li>
                    </ul>
                </div>
            </li>
            <li>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" style="min-width:5em;background-color:transparent;padding-top:1.4em;font-family:Xena">
                        Mana &nbsp;<span class="caret" style="border-color:white; border-width:2px"></span>
                    </button>
                    <ul class="dropdown-menu" style="background-color:transparent">
                        <li style="background-color:transparent">@Html.ActionLink("Aufsteigend", "CardCollection", new { SortValue = 11 }, new { @class = "btn dropdown-toggle" })</li>
                        <li style="background-color:transparent">@Html.ActionLink("Absteigend", "CardCollection", new { SortValue = 12 }, new { @class = "btn dropdown-toggle" })</li>
                    </ul>
                </div>
            </li>
            <li>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" style="min-width:5em;background-color:transparent;padding-top:1.4em;font-family:Xena">
                        Attack &nbsp;<span class="caret" style="border-color:white; border-width:2px"></span>
                    </button>
                    <ul class="dropdown-menu" style="background-color:transparent">
                        <li style="background-color:transparent">@Html.ActionLink("Aufsteigend", "CardCollection", new { SortValue = 13 }, new { @class = "btn dropdown-toggle" })</li>
                        <li style="background-color:transparent">@Html.ActionLink("Absteigend", "CardCollection", new { SortValue = 14 }, new { @class = "btn dropdown-toggle" })</li>
                    </ul>
                </div>
            </li>
            <li>
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" style="min-width:5em;background-color:transparent;padding-top:1.4em;font-family:Xena">
                        Life &nbsp;<span class="caret" style="border-color:white; border-width:2px"></span>
                    </button>
                    <ul class="dropdown-menu" style="background-color:transparent">
                        <li style="background-color:transparent">@Html.ActionLink("Aufsteigend", "CardCollection", new { SortValue = 15 }, new { @class = "btn dropdown-toggle" })</li>
                        <li style="background-color:transparent">@Html.ActionLink("Absteigend", "CardCollection", new { SortValue = 16 }, new { @class = "btn dropdown-toggle" })</li>
                    </ul>
                </div>
            </li>
            <li>
                @using (Html.BeginForm())
                {
                    <p>
                        @Html.TextBox("Search")
                        <input style="max-width:5em" type="submit" value="Suchen" />
                    </p>
                }
            </li>
        </ul>
    </div>
  </nav>

    <div class="col col-md-6 cardcol">
        <div class="card-deck-wrapper col-md-12 cardcol" id="ShowNewCards">
            <div class="card-deck cardcol ">
                <h3>Deine Karten</h3>
                @foreach (var card in Model)
            {
                    <div class="card col-md-3">
                        @if (card.Pic != null)
                        {
                            var base64 = Convert.ToBase64String(card.Pic);
                            var imgSrc = String.Format("data:image/png;base64,{0}", base64);
                            <img class="cardpic" src="@imgSrc" />
                        }
                        else
                        {
                            <div class="card-header ">@Html.DisplayText("no Picture found")</div>
                        }
                        <div class="card-title ">
                            <h3 class="cardtitle">@Html.DisplayFor(c => card.Name)</h3>
                        </div>
                        <div class="card-footer ">
                            <h5>@Html.DisplayFor(c => card.Flavor)</h5>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

