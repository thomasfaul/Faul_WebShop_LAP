
@model  CardGame.Web.Models.DB.DeckBuilder

@{
    ViewBag.Title = "EditDeck";
}
<div class="container-fluid editdeckcont">
    <h2>Baue dein persönliches Deck</h2>

    <div class="row editdeckrow"style="margin-left:5em;">
        <div class="img-circle"id="adpic"><img id="adpicinner"src="~/Content/images/Cardpacks/4.png" /></div>
        <div class="col col-md-6  colcol"style="min-width:45em">
            <div><h3> Ihre Sammlung</h3></div>
          
               
                    <h3 style="color:darkorange">@Model.collectioncards.Count Karten </h3>
            
            
            <div class="table-responsive showcont" id="listProducts">
                <table cellpadding="2" cellspacing="2" border="0" class="table table-condensed ">
                    <thead>
                        <tr class="showtr">
                            <th class="col-md-1 "></th>
                            <th class="col-md-4 ">
                                Namen
                            </th>
                             
                            <th>
                                Typ
                            </th>
                            <th>
                               Mana
                            </th>
                            <th>
                           Attack 
                            </th>
                            <th>
                            Life 
                            </th>
                            <th>Hinzufügen</th>
                        </tr>
                    </thead>

                    <tbody>
                       
                        
                           
                        @foreach (var card in Model.collectioncards)
                        {
                            var base64 = Convert.ToBase64String(card.Pic);
                            var imgSrc = String.Format("data:image/png;base64,{0}", base64);
<tr class="showtr">
                                <td class="col-md-1 showth"><img class="img-responsive deckbuilderpic img-thumbnail" src="@imgSrc" /></td>
                                <td  class="col-md-2 showth">@Html.DisplayFor(c => card.Name)</td>
                                <td class="col-md-2 showth">@Html.DisplayFor(c => card.Type)</td>
                                <td class="col-md-1 showth">@Html.DisplayFor(c => card.Mana)</td>
                                <td class="col-md-1 showth">@Html.DisplayFor(c => card.Attack)</td>
                                <td class="col-md-1 showth">@Html.DisplayFor(c => card.Life)</td>
                                <td class="col-md-1 showth"style="font-size:large">@Html.ActionLink("+", "AddCardToDeck", new { id = Model.collectioncards.IndexOf(card) })</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col col-md-6 colcol" style="background-color:rgba(247, 179, 80, 0.64);color:gray;min-width:45em">
            <div>
                <h3> Ihr Deck</h3>
                @if (Model.deckcards.Count > 32)
                {
                    <h3 style="color:red;background-color:darkgoldenrod">@Model.deckcards.Count Karten </h3>
                    <h5 style="color:red;background-color:darkgoldenrod">Max.32 Karten!! </h5>
                }
                else
                {
                    <h3 style="color:darkorange">@Model.deckcards.Count Karten </h3>
                }
                
                <div class="col-md-2-offset offsetlinks">

                    <h1>Klick auf die Kreuze ;-)</h1>
                    <br />
                    <h2> <a href="@Url.Action("Deckoverview", "Profile")">Zurück zu den Decks</a>")</h2>
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />
                    <h2>@Html.ActionLink("Save Deck", "SaveDeck", new { id = Model.DeckID })</h2>
                </div>
               
                <table cellpadding="2" cellspacing="2" border="0" class="table table-condensed">
                    <thead>
                        
                        <tr class="showtr">
                            <th class="col-md-1 "></th>
                            <th class="col-md-4 ">
                                Namen
                            </th>
                           
                            <th>
                                Typ
                            </th>
                            <th>
                                Mana
                            </th>
                            <th>
                                Attack
                            </th>
                            <th>
                                Life
                            </th>
                            <th>Entfernen</th>
                        </tr>
                    
                    </thead>
                    <tbody>
                        @foreach (var card in Model.deckcards)
                        {
                            var base64 = Convert.ToBase64String(card.Pic);
                            var imgSrc = String.Format("data:image/png;base64,{0}", base64);
                            <tr class="showtr">
                                <td class="col-md-1 showth"><img class="img-responsive deckbuilderpic img-thumbnail" src="@imgSrc" /></td>
                                <td class="col-md-3 showth">@Html.DisplayFor(c => card.Name)</td>
                                <td class="col-md-2 showth">@Html.DisplayFor(c => card.Type)</td>
                                <td class="col-md-1 showth">@Html.DisplayFor(c => card.Mana)</td>
                                <td class="col-md-1 showth">@Html.DisplayFor(c => card.Attack)</td>
                                <td class="col-md-1 showth">@Html.DisplayFor(c => card.Life)</td>
                                <td class="col-md-1 showth"style="font-size:large">@Html.ActionLink("x", "RemoveCardFromDeck", new { id = Model.deckcards.IndexOf(card) })</td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>

    </div>

</div>

